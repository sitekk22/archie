'\" t
.\" Copyright 2002 Walter Harms (walter.harms@informatik.uni-oldenburg.de)
.\" and Copyright (C) 2011 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: GPL-1.0-or-later
.\"
.TH cacos 3 2022-12-15 "Linux man-pages 6.03"
.SH NAME
cacos, cacosf, cacosl \- complex arc cosine
.SH LIBRARY
Math library
.RI ( libm ", " \-lm )
.SH SYNOPSIS
.nf
.B #include <complex.h>
.PP
.BI "double complex cacos(double complex " z );
.BI "float complex cacosf(float complex " z );
.BI "long double complex cacosl(long double complex " z );
.fi
.SH DESCRIPTION
These functions calculate the complex arc cosine of
.IR z .
If \fIy\ =\ cacos(z)\fP, then \fIz\ =\ ccos(y)\fP.
The real part of
.I y
is chosen in the interval [0,pi].
.PP
One has:
.PP
.nf
    cacos(z) = \-i * clog(z + i * csqrt(1 \- z * z))
.fi
.SH VERSIONS
These functions were added in glibc 2.1.
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
.BR cacos (),
.BR cacosf (),
.BR cacosl ()
T}	Thread safety	MT-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
C99, POSIX.1-2001, POSIX.1-2008.
.SH EXAMPLES
.\" SRC BEGIN (cacos.c)
.EX
/* Link with "\-lm" */

#include <complex.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

int
main(int argc, char *argv[])
{
    double complex z, c, f;
    double complex i = I;

    if (argc != 3) {
        fprintf(stderr, "Usage: %s <real> <imag>\en", argv[0]);
        exit(EXIT_FAILURE);
    }

    z = atof(argv[1]) + atof(argv[2]) * I;

    c = cacos(z);

    printf("cacos() = %6.3f %6.3f*i\en", creal(c), cimag(c));

    f = \-i * clog(z + i * csqrt(1 \- z * z));

    printf("formula = %6.3f %6.3f*i\en", creal(f), cimag(f));

    exit(EXIT_SUCCESS);
}
.EE
.\" SRC END
.SH SEE ALSO
.BR ccos (3),
.BR clog (3),
.BR complex (7)
